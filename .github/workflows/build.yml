name: Build pc-ble-driver-py
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*
env:
  NRF_BLE_DRIVER_VERSION: 4.1.100
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        include:
          - python-version: '3.8'
            toxpy: py38
          - python-version: '3.9'
            toxpy: py39
          - python-version: '3.10'
            toxpy: py310
          - python-version: '3.11'
            toxpy: py311
          - python-version: '3.12'
            toxpy: py312
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: pc-ble-driver-py

    - name: Checkout pc-ble-driver
      uses: actions/checkout@v3
      with:
        repository: NordicSemiconductor/pc-ble-driver
        ref: c0ffd419053e2405fffdb02ce7f1f9acceff4a66
        path: pc-ble-driver

    - name: Install linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y cmake build-essential libspdlog-dev libasio-dev libudev-dev

    - name: Install macos dependencies
      if: runner.os == 'macOS'
      run: brew install cmake swig asio spdlog

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install windows dependencies
      if: runner.os == 'Windows'
      env:
        VCPKG_ROOT: C:\vcpkg
      run: |
        echo "VCPKG_ROOT=${{ env.VCPKG_ROOT }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        choco install cmake swig
        vcpkg install --triplet x64-windows asio spdlog

    - name: toxify
      working-directory: pc-ble-driver
      run: |
         python -m pip install scikit-build tox
         tox -e ${{ matrix.toxpy }}

    - name: Compile pc-ble-driver
      if: runner.os != 'Windows'
      working-directory: pc-ble-driver
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DDISABLE_TESTS=1 -DNRF_BLE_DRIVER_VERSION=${{ env.NRF_BLE_DRIVER_VERSION }} -G "Unix Makefiles" ..
        make nrf_ble_driver_sd_api_v5_static
        sudo make install

    - name: Compile pc-ble-driver windows
      if: runner.os == 'Windows'
      working-directory: pc-ble-driver
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DDISABLE_TESTS=1 "-DNRF_BLE_DRIVER_VERSION=${{ env.NRF_BLE_DRIVER_VERSION }}" -G "Visual Studio 17 2022" -A x64 ..
        cmake --build . --config Release
        cmake --install . --config Release

    - name: Build pc-ble-driver-py wheels
      working-directory: pc-ble-driver-py
      run: |
        python setup.py bdist_wheel --build-type Release

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pc_ble_driver_py-${{ matrix.os }}-${{ matrix.toxpy}}
        path: "pc-ble-driver-py/dist/*.whl"
        if-no-files-found: error
  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: upload release assets
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: flatten folder structure
        working-directory: dist
        run: |
          find . -name '*.whl' -exec mv {} . \;
          find . -type d -empty -delete

          # list files
          ls -R

      - name: upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
